app: pankkilinkki-app
service: pankkilinkki
useDotenv: true

plugins:
  - serverless-webpack
  - serverless-python-requirements

provider:
  name: aws
  region: eu-north-1
  stage: ${opt:stage, 'dev'}

  logRetentionInDays: 180
  lambdaHashingVersion: 20201221

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - sqs:GetQueueUrl
            - sqs:SendMessage
            - sqs:DeleteMessageBatch
          Resource:
            - Fn::GetAtt: [TaskQueue, Arn]
        - Effect: "Allow"
          Action:
            - s3:ListBucket
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
          Resource:
            Fn::Join: ["", ["arn:aws:s3:::", "${self:custom.bucketName}", "/*"]]

custom:
  queueName: pankkilinkki-${self:provider.stage}
  bucketName: pankkilinkki-${self:provider.stage}
  pythonRequirements:
    dockerizePip: true
    dockerImage: lambci/lambda:build-python3.8
    noDeploy:
      - futures

# Create resources with CloudFormation templates
resources:
  - ${file(resources/sqs-queue.yml)}

package:
  artifact: .serverless/pankkilinkki.zip

functions:
  handler:
    handler: handler.handler
    runtime: python3.8
    description: Pankkilinkki - handle downloaded files
    environment:
      ENDPOINT: ${env:ENDPOINT, 'http://localhost:8000'}
      API_KEY: ${env:API_KEY, 'secret'}
    events:
      - s3:
          bucket: ${self:custom.bucketName}
          event: s3:ObjectCreated:*
          rules:
            - prefix: files/
  linkki:
    handler: linkki.handler
    runtime: nodejs14.x
    description: Pankkilinkki - download files
    environment:
      BUCKET: ${self:custom.bucketName}
      QUEUE: ${self:custom.queueName}
      USERNAME: ${env:PANKKILINKKI_USERNAME, '10000'}
      LANGUAGE: "FI"
    events:
      - schedule:
          rate: rate(12 hours)
          enabled: true
          name: poll
      - schedule:
          rate: rate(10 minutes)
          enabled: true
          name: key-check
      - sqs:
          batchSize: 1
          arn:
            Fn::GetAtt: [TaskQueue, Arn]
